imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: fos_elastica.yml }

framework:
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver:     '%database.driver%'
        host:       '%database.host%'
        port:       '%database.port%'
        dbname:     '%database.name%'
        user:       '%database.user%'
        password:   '%database.password%'
        charset: UTF8

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            SinglehopLlcBaseInfrastructureBundle:
                type: yml
                prefix: SinglehopLlc\Base\Domain

doctrine_migrations:
    dir_name: '%kernel.root_dir%/DoctrineMigrations'
    namespace: Application\Migrations
    table_name: "%database.schema%.migration_versions"
    name: Application Migration

#FOS REST Configuration
fos_rest:
    # Add allowed methods in header
    allowed_methods_listener: true
    param_fetcher_listener: true
    # Allow JSON|XML for POST body
    body_listener:
        enabled: true
        array_normalizer: fos_rest.normalizer.camel_keys
    routing_loader:
        default_format: json
        include_format: false
    view:
        mime_types:
            json: ['application/json', 'application/json;version=1.0', 'application/json;version=1.1', 'application/json;version=1.2']
        view_response_listener: 'force'
        #formats can be added here; include added formats in priorities for format_listener.rules
        formats:
            json: true
        force_redirects:
            json: true
    format_listener:
        rules:
            - { path: ^/, priorities: [ json ], fallback_format: json, prefer_extension: true }

    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
            'Symfony\Component\HttpKernel\Exception\HttpException': true
    # Add serialize_null to show nulls
    serializer:
            serialize_null: true

# Nelmio api doc settings
nelmio_api_doc:
    name:   '%app.name%'
    cache:
        enabled: true
    sandbox:
        request_format:
            method: accept_header
        authentication:
            name:     access_token
            delivery: query
            type:     bearer

#RBAC connection settings;
rbac_connect:
    host: "%rbac.host%"
    protocol: "%rbac.protocol%"
    uri: "%rbac.connect.path%"

jms_serializer:
    handlers:
        datetime:
            default_format: "U"
            default_timezone: "UTC"
    metadata:
        cache: file
        debug: "%kernel.debug%"
        file_cache:
            dir: "%kernel.cache_dir%/serializer"
        directories:
            InterfaceBundle:
                namespace_prefix: "SinglehopLlc\\Base\\Domain\\Model\\"
                path: "@SinglehopLlcBaseInterfaceBundle/Resources/config/serializer"
            ProophEventStoreBundle:
                namespace_prefix: "Prooph\\EventSourcing"
                path: "@SinglehopLlcBaseInterfaceBundle/Resources/config/serializer"

prooph_event_store:
    stores:
        example_store:
            event_store: 'prooph.pdo_event_store'
            repositories:
                example_collection:
                    repository_class: 'SinglehopLlc\Base\Infrastructure\Repository\EventStore\EventStoreExampleCollection'
                    aggregate_type: 'SinglehopLlc\Base\Domain\Model\Example\Example'
                    aggregate_translator: 'prooph_event_sourcing.aggregate_translator'
                    stream_name: 'example_stream'

prooph_service_bus:
    command_buses:
        example_command_bus:
#            plugins:
#                - 'prooph_event_store_bus_bridge.transaction_manager'
            router:
                type: 'prooph_service_bus.command_bus_router'
                routes:
                    'SinglehopLlc\Base\Domain\Model\Example\Command\CreateExampleCommand': '@singlehop.base.create_example_handler'

    event_buses:
        example_event_bus:
            plugins:
            router:
                type: 'prooph_service_bus.event_bus_router'
                routes:
                    'SinglehopLlc\Base\Domain\Model\Example\Event\ExampleWasCreated':
                        - '@singlehop.base.projection.example_projector'